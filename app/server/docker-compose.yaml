version: '3.8'
services:
  zoneminder:
    container_name: zoneminder
    build: .
    # image: zoneminderhq/zoneminder:latest-ubuntu18.04
    # command: ["nohup", "redis-server", ">", "/dev/null", "2>&1", "&"]
    depends_on:
      - database
    restart: unless-stopped
    ports:
      - ${SSH_PORT}:22
      - ${ZONEMINDER_PORT}:80
      - ${DJANGO_PORT}:8000
    privileged: true
    shm_size: 512M
    env_file:
      - .env
    volumes:
      - ${PATH_SERVER}:/usr/src/monitorauff/app/server
      - ${PATH_ZONEMINDER_EVENTS}:/var/cache/zoneminder/events
      - ${PATH_ZONEMINDER_IMAGES}:/var/cache/zoneminder/images
      - ${PATH_ZONEMINDER_MYSQL}:/var/lib/mysql
      - ${PATH_ZONEMINDER_LOGS}:/var/log/zoneminder
      - ${PATH_SSH}:/root/.ssh
    networks:
      monitorauff_network:
        ipv4_address: ${ZONEMINDER_IP}
  database:
    container_name: database
    image: postgres:14
    restart: always
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      monitorauff_network:
        ipv4_address: ${DATABASE_IP}
    env_file:
      - ./.env
    volumes:
      - ${PATH_POSTGRES_DATA}:/var/lib/postgresql/data
      #- ../database/scripts:/scripts
      #- ../database/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    env_file:
      - ./.env
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      monitorauff_network:
        ipv4_address: ${ADMINER_IP}

volumes:
  events:
  images:
  mysql:
  logs:

networks:
  monitorauff_network:
    external:
      name: monitorauff_network
