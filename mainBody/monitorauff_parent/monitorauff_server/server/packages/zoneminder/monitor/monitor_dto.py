# https://zoneminder.readthedocs.io/en/latest/api.html#examples

class MonitorDTO():

    def __init__(self, **kwargs):

        self.id: int = kwargs.get('Id', None)
        self.name: str = kwargs.get('Name', None)
        self.notes: str = kwargs.get('Notes', None)
        self.serverId: int = kwargs.get('ServerId', None)
        self.storageId: int = kwargs.get('StorageId', None)
        self.type: str = kwargs.get('Type', None)
        self.function: str = kwargs.get('Function', None)
        self.enabled: int = kwargs.get('Enabled', None)
        self.decodingEnabled: int = kwargs.get('DecodingEnabled', None)
        self.linkedMonitors: str = kwargs.get('LinkedMonitors', None)
        self.triggers: str = kwargs.get('Triggers', None)
        self.onvifURL: str = kwargs.get('ONVIF_URL', None)
        self.onvifUsername: str = kwargs.get('ONVIF_Username', None)
        self.onvifPassword: str = kwargs.get('ONVIF_Password', None)
        self.onvifOptions: str = kwargs.get('ONVIF_Options', None)
        self.device: str = kwargs.get('Device', None)
        self.channel: int = kwargs.get('Channel', None)
        self.format: int = kwargs.get('Format', None)
        self.v4LMultiBuffer: str = kwargs.get('V4LMultiBuffer', None)
        self.v4LCapturesPerFrame: int = kwargs.get('V4LCapturesPerFrame', None)
        self.protocol: str = kwargs.get('Protocol', None)
        self.method: str = kwargs.get('Method', None)
        self.host: str = kwargs.get('Host', None)
        self.port: int = kwargs.get('Port', None)
        self.subPath: str = kwargs.get('SubPath', None)
        self.path: str = kwargs.get('Path', None)
        self.secondPath: str = kwargs.get('SecondPath', None)
        self.options: str = kwargs.get('Options', None)
        self.user: str = kwargs.get('User', None)
        self.password: str = kwargs.get('Pass', None)
        self.width: int = kwargs.get('Width', None)
        self.height: int = kwargs.get('Height', None)
        self.colours: int = kwargs.get('Colours', None)
        self.palette: int = kwargs.get('Palette', None)
        self.orientation: str = kwargs.get('Orientation', None)
        self.deinterlacing: int = kwargs.get('Deinterlacing', None)
        self.decoderHWAccelName: str = kwargs.get('DecoderHWAccelName', None)
        self.decoderHWAccelDevice: str = kwargs.get(
            'DecoderHWAccelDevice', None)
        self.saveJPEGs: int = kwargs.get('SaveJPEGs', None)
        self.videoWriter: int = kwargs.get('VideoWriter', None)
        self.outputCodec: int = kwargs.get('OutputCodec', None)
        self.encoder: str = kwargs.get('Encoder', None)
        self.outputContainer: str = kwargs.get('OutputContainer', None)
        self.encoderParameters: str = kwargs.get('EncoderParameters', None)
        self.recordAudio: int = kwargs.get('RecordAudio', None)
        self.rtspDescribe: bool = kwargs.get('RTSPDescribe', None)
        self.brightness: int = kwargs.get('Brightness', None)
        self.contrast: int = kwargs.get('Contrast', None)
        self.hue: int = kwargs.get('Hue', None)
        self.colour: int = kwargs.get('Colour', None)
        self.eventPrefix: str = kwargs.get('EventPrefix', None)
        self.labelFormat: str = kwargs.get('LabelFormat', None)
        self.labelX: int = kwargs.get('LabelX', None)
        self.labelY: int = kwargs.get('LabelY', None)
        self.labelSize: int = kwargs.get('LabelSize', None)
        self.imageBufferCount: int = kwargs.get('ImageBufferCount', None)
        self.maxImageBufferCount: int = kwargs.get('MaxImageBufferCount', None)
        self.warmupCount: int = kwargs.get('WarmupCount', None)
        self.preEventCount: int = kwargs.get('PreEventCount', None)
        self.postEventCount: int = kwargs.get('PostEventCount', None)
        self.streamReplayBuffer: int = kwargs.get('StreamReplayBuffer', None)
        self.alarmFrameCount: int = kwargs.get('AlarmFrameCount', None)
        self.sectionLength: int = kwargs.get('SectionLength', None)
        self.minSectionLength: int = kwargs.get('MinSectionLength', None)
        self.frameSkip: int = kwargs.get('FrameSkip', None)
        self.motionFrameSkip: int = kwargs.get('MotionFrameSkip', None)
        self.analysisFPSLimit: str = kwargs.get('AnalysisFPSLimit', None)
        self.analysisUpdateDelay: int = kwargs.get('AnalysisUpdateDelay', None)
        self.maxFPS: str = kwargs.get('MaxFPS', None)
        self.alarmMaxFPS: str = kwargs.get('AlarmMaxFPS', None)
        self.fpsReportInterval: int = kwargs.get('FPSReportInterval', None)
        self.refBlendPerc: int = kwargs.get('RefBlendPerc', None)
        self.alarmRefBlendPerc: int = kwargs.get('AlarmRefBlendPerc', None)
        self.controllable: int = kwargs.get('Controllable', None)
        self.controlId: str = kwargs.get('ControlId', None)
        self.controlDevice: str = kwargs.get('ControlDevice', None)
        self.controlAddress: str = kwargs.get('ControlAddress', None)
        self.autoStopTimeout: str = kwargs.get('AutoStopTimeout', None)
        self.trackMotion: int = kwargs.get('TrackMotion', None)
        self.trackDelay: str = kwargs.get('TrackDelay', None)
        self.returnLocation: int = kwargs.get('ReturnLocation', None)
        self.returnDelay: str = kwargs.get('ReturnDelay', None)
        self.modectDuringPTZ: int = kwargs.get('ModectDuringPTZ', None)
        self.defaultRate: int = kwargs.get('DefaultRate', None)
        self.defaultScale: int = kwargs.get('DefaultScale', None)
        self.defaultCodec: str = kwargs.get('DefaultCodec', None)
        self.signalCheckPoints: int = kwargs.get('SignalCheckPoints', None)
        self.signalCheckColour: str = kwargs.get('SignalCheckColour', None)
        self.webColour: str = kwargs.get('WebColour', None)
        self.exif: bool = kwargs.get('Exif', None)
        self.sequence: int = kwargs.get('Sequence', None)
        self.zoneCount: int = kwargs.get('ZoneCount', None)
        self.refresh: str = kwargs.get('Refresh', None)
        self.latitude: str = kwargs.get('Latitude', None)
        self.longitude: str = kwargs.get('Longitude', None)
        self.rtspServer: bool = kwargs.get('RTSPServer', None)
        self.rtspStreamName: str = kwargs.get('RTSPStreamName', None)
        self.importance: str = kwargs.get('Importance', None)

    def __str__(self):
        return self.name
