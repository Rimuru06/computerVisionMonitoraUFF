# Generated by Django 4.0.2 on 2022-06-02 02:19

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EtiquetaIndividuo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'TB_ETIQUETA_INDIVIDUO',
            },
        ),
        migrations.CreateModel(
            name='Individuo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'TB_INDIVIDUO',
            },
        ),
        migrations.CreateModel(
            name='PermissaoIndividuo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'TB_PERMISSAO_INDIVIDUO',
            },
        ),
        migrations.CreateModel(
            name='ServicoDeteccaoFace',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'TB_SERVICO_DETECCAO_FACE',
            },
        ),
        migrations.CreateModel(
            name='TipoServico',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(max_length=1000)),
            ],
            options={
                'db_table': 'TB_TIPO_SERVICO',
            },
        ),
        migrations.CreateModel(
            name='PermissaoIndividuoGrupo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('grupo_id', models.IntegerField()),
                ('permissao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grupos', to='server.permissaoindividuo')),
            ],
            options={
                'db_table': 'RL_PERMISSAO_INDIVIDUO_GRUPO',
                'unique_together': {('permissao', 'grupo_id')},
            },
        ),
        migrations.CreateModel(
            name='OcorrenciaFace',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('camera_id', models.IntegerField()),
                ('img_filename', models.CharField(max_length=256)),
                ('data_md5', models.CharField(max_length=256)),
                ('individuo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='server.individuo')),
            ],
            options={
                'db_table': 'TB_OCORRENCIA_FACE',
            },
        ),
        migrations.CreateModel(
            name='IndividuoEtiquetado',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('etiqueta_individuo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.etiquetaindividuo')),
                ('individuo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.individuo')),
            ],
            options={
                'db_table': 'RL_INDIVIDUO_ETIQUETA',
            },
        ),
        migrations.AddField(
            model_name='individuo',
            name='etiquetas',
            field=models.ManyToManyField(blank=True, through='server.IndividuoEtiquetado', to='server.EtiquetaIndividuo'),
        ),
        migrations.CreateModel(
            name='EtiquetaPermissaoIndividuo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('etiqueta_individuo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.etiquetaindividuo')),
                ('permissao_individuo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.permissaoindividuo')),
            ],
            options={
                'db_table': 'RL_ETIQUETA_PERMISSAO_INDIVIDUO',
            },
        ),
        migrations.AddField(
            model_name='etiquetaindividuo',
            name='permissoes',
            field=models.ManyToManyField(through='server.EtiquetaPermissaoIndividuo', to='server.PermissaoIndividuo'),
        ),
        migrations.CreateModel(
            name='AlertaIndividuo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('face', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='server.ocorrenciaface')),
                ('permissao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='server.permissaoindividuogrupo')),
            ],
            options={
                'db_table': 'TB_ALERTA_INDIVIDUO',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='Nome completo')),
                ('tipoUser', models.CharField(blank=True, choices=[('Gerente', 'Gerente'), ('Analista', 'Analista'), ('Seguranca', 'Segurança')], max_length=150, verbose_name='Função')),
                ('matricula', models.CharField(blank=True, max_length=150, unique=True, verbose_name='Matricula')),
                ('status', models.CharField(blank=True, choices=[('Ativo', 'Ativo'), ('Inativo', 'Inativo')], default='Inativo', max_length=8)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'TB_USUARIO',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TipoServicoMonitor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('monitor_id', models.IntegerField()),
                ('servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servico', to='server.tiposervico')),
            ],
            options={
                'db_table': 'RL_TIPO_SERVICO_MONITOR',
                'unique_together': {('servico', 'monitor_id')},
            },
        ),
    ]
