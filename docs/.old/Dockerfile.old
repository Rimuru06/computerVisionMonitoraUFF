### ESTE DOCKFILE É DE UMA PRIMEIRA TENTATIVA DE "DOQUERIZAR" O PROJETO.
### ESTÁ SENDO MANTIDO PARA FINS DE DOCUMENTAÇÃO, POIS CONTÉM UM PASSO-A-PASSO QUE PODE SER ÚTIL EM ALGUM MOMENTO.

FROM zoneminderhq/zoneminder:latest-ubuntu18.04

# Instalação do Python e dependências
RUN apt-get update && apt-get upgrade -y && apt-get install -y \
	&& apt install python3.10 -y \
	&& apt install python3-pip -y \
	&& apt install python3-psycopg2 -y

RUN pip3 install --upgrade pip \
	&& python3 -m pip install --upgrade setuptools \
	&& pip3 install websockets

## Instalação OPENCV
# https://docs.opencv.org/4.5.4/d7/d9f/tutorial_linux_install.html

# Install minimal prerequisites (Ubuntu 18.04 as reference)
RUN apt install -y cmake g++ wget unzip  \
	# Download and unpack sources
	&& wget -O opencv.zip https://github.com/opencv/opencv/archive/master.zip \
	&& wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/master.zip \
	&& unzip opencv.zip \
	&& unzip opencv_contrib.zip \
	# Create build directory and switch into it
	&& mkdir -p build && cd build \
	# Configure
	&& cmake -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib-master/modules ../opencv-master \
	# Build
	&& cmake --build . \
	&& make install \
	&& python3 -m pip install opencv-python

## Instalação Tesseract
# https://tesseract-ocr.github.io/
# https://packages.ubuntu.com/bionic/tesseract-ocr-all
RUN apt install tesseract-ocr -y \
	&& apt install libtesseract-dev -y\
	&& apt install tesseract-ocr-por


## Instalação OpenALPR

# Instalando pre-requisitos
# https://github.com/openalpr/openalpr/wiki/Compilation-instructions-(Ubuntu-Linux)
RUN apt-get install libopencv-dev libtesseract-dev git cmake build-essential libleptonica-dev -y \
	&& apt-get install liblog4cplus-dev libcurl3-dev \
	# If using the daemon, install beanstalkd
	&& apt-get install beanstalkd \
	# Clone the latest code from GitHub
	&& git clone https://github.com/openalpr/openalpr.git \
	# Setup the build directory
	&& cd openalpr/src \
	&& mkdir build && cd build \
	# setup the compile environment
	#&& cmake -DWITH_GPU_DETECTOR=ON -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_INSTALL_SYSCONFDIR:PATH=/etc .. \
	&& cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_INSTALL_SYSCONFDIR:PATH=/etc .. \
	# compile the library
	&& make \
	# Install the binaries/libraries to your local system (prefix is /usr)
	&& make install \
	# Test the library
	&& wget http://plates.openalpr.com/h786poj.jpg -O lp.jpg \
	&& alpr lp.jpg


## Configurações Agente
RUN ssh-keygen -t rsa
RUN scp ~/.ssh/id_rsa.pub root@localhost

RUN mkdir -p ~/.ssh
RUN touch ~/.ssh/authorized_keys
RUN cat ~/id_rsa.pub >> ~/.ssh/authorized_keys
RUN rm ~/id_rsa.pub